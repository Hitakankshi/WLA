<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- The title is correctly set for the package -->
    <title>Puri Saila-Srikhetra | 3 Nights, 4 Days</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f7f9fb;
        }
        /* Custom scrollbar for itinerary box to make it look clean */
        
        #itinerary-content {
            max-height: 400px;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #3b82f6 #f1f1f1;
        }
        
        #itinerary-content::-webkit-scrollbar {
            width: 8px;
        }
        
        #itinerary-content::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }
        
        #itinerary-content::-webkit-scrollbar-thumb {
            background-color: #3b82f6;
            border-radius: 4px;
        }
        
        .tab-content {
            display: none;
        }
        
        .active-tab {
            border-bottom: 3px solid #f97316;
            color: #1f2937;
            font-weight: 600;
        }
        /* Floating CTA Bar for mobile */
        
        @media (max-width: 767px) {
            #floating-cta {
                position: fixed;
                bottom: 0;
                left: 0;
                right: 0;
                z-index: 50;
                box-shadow: 0 -4px 6px -1px rgba(0, 0, 0, 0.1);
            }
            /* Add padding to the bottom of the main content to avoid overlap with the floating CTA */
            main {
                padding-bottom: 100px;
            }
        }
    </style>
</head>

<body class="antialiased">

    <!-- Mock Data and Gemini API Logic -->
    <script>
        // *** CORRECTION ***
        // Updated the packageData object to match the "Puri" theme, price, and duration
        // shown in the static HTML and the rest of the file's content (itinerary, hotels).
        const packageData = {
            title: "Puri Saila-Srikhetra",
            destination: "Puri, Odisha, India",
            duration: "3 Nights / 4 Days",
            fromCity: "Bhubaneswar / Puri",
            price: "‚Çπ10,999",
            perText: "per person on twin sharing",
            travelDate: "14 Nov 2025",
            // Updated: Image data for the carousel now contains 6 images
            carouselImages: [
                "https://s7ap1.scene7.com/is/image/incredibleindia/sri-jagannath-temple-puri-odisha-hero?qlt=82&ts=1726663775457",
                "https://s7ap1.scene7.com/is/image/incredibleindia/puri-beach-puri-odisha-1-attr-hero?qlt=82&ts=1726663799757",
                "https://www.toursorissa.com/wp-content/uploads/2016/11/chilika-lake-and-bird-sanctuary-tour-in-odisha.jpg",
                "https://s7ap1.scene7.com/is/image/incredibleindia/konark-temple-puri-odisha-2-attr-hero?qlt=82&ts=1726674676369",
                "https://r1imghtlak.mmtcdn.com/7d9521e2-9714-4bfc-b54e-e63377478b99.jpeg",
                "https://r1imghtlak.mmtcdn.com/245ad30c864411eea3760a58a9feac02.jpg"
            ],
            itinerary: [{
                day: 1,
                title: "Arrival in Puri & Temple City Immersion",
                details: "Arrive at Biju Patnaik International Airport, Bhubaneswar (BBI), or Puri Railway Station. Transfer to your pre-booked hotel in Puri. Check-in and relax.Afternoon: Head to the iconic Shree Jagannath Temple (non-Hindus are typically restricted to viewing from the outside or from a rooftop nearby; Hindus can enter for Darshan). Absorb the spiritual atmosphere and witness the temple's magnificent Kalinga architecture.Evening: Enjoy a leisurely walk along the famous Puri Beach (Golden Beach). Witness the majestic sunset and sample local street food."
            }, {
                day: 2,
                title: "Konark Sun Temple & Coastal Beauty",
                details: "Morning: After breakfast, embark on a scenic drive to Konark. Visit the UNESCO World Heritage site, the Konark Sun Temple, an architectural marvel shaped like a giant chariot.Afternoon: Visit the serene Chandrabhaga Beach, located near Konark. Optional: Explore the Konark Museum to see excavated temple artifacts.Late Afternoon: On your way back to Puri, stop at the artisanal village of Raghurajpur. Witness the traditional art of Pattachitra painting and interact with local craftsmen.Evening: Return to Puri. Spend time shopping for local handicrafts near Swargadwar."
            }, {
                day: 3,
                title: "Chilika Lake, Dolphins & Natural Wonders",
                details: "Morning: Embark on a day trip to Chilika Lake, the largest brackish water lagoon in Asia. Drive to the Satapada side of the lake.Mid-Day: Take a thrilling boat ride on Chilika Lake. This is the main highlight for spotting the endangered Irrawaddy Dolphins and enjoying the vast, tranquil waters where the lake meets the sea.Afternoon: Have lunch near Chilika or Satapada. Start your journey back to Puri.Evening: Relax at the hotel or enjoy a final walk on the Puri beach promenade, reflecting on your cultural and natural discoveries."
            }, {
                day: 4,
                title: "Departure from Puri",
                details: "Morning: After breakfast, check out from the hotel. Depending on your train or flight schedule, you can do some last-minute souvenir shopping or visit any local temples you may have missed.Transfer to the Puri Railway Station or Bhubaneswar (BBI) Airport for your onward journey, carrying cherished memories of Odisha soulcity."
            }],
            inclusions: [
                // Corrected: The original code used a placeholder '‚úà' for flights, but the package is from Odisha.
                // Changed to a more neutral icon or relevant text. Let's assume flights aren't included unless specified.
                // The original "Goa" flight text was incorrect for an Odisha package.
                {
                    icon: "üè®",
                    text: "3 Nights Accommodation in a Sea-Facing or Premium 3-star Hotel/Resort in Puri"
                }, {
                    icon: "üöó",
                    text: "Private AC Vehicle for all sightseeing as per the itinerary (Puri, Konark, Chilika/Satapada)"
                }, {
                    icon: "üçΩ",
                    text: "Daily Breakfast at the hotel"
                }, {
                    icon: "üé´",
                    text: "Monument Entry Tickets for Konark Sun Temple and other specified sites"
                }, {
                    icon: "üßë‚Äçüíª",
                    text: "24/7 Travel Assistance and Local Support"
                }
                // Removed: { icon: "‚úà", text: "Roundtrip Economy Class Flights (New Delhi - Goa - New Delhi)" } - This was incorrect for this package.
            ],
            hotels: [{
                name: "Reba Beach Resort",
                rating: 4.7,
                location: "Near Puri Beach",
                price: "Starting ‚Çπ2,800/night"
            }, {
                name: "Marwadi Guest House",
                rating: 3.5,
                location: "Balagandi, Puri",
                price: "Starting ‚Çπ2,500/night"
            }, {
                name: "Local Guesthouse near Satapada",
                rating: 4.5,
                location: "Near Boating Point, Puri",
                price: "Starting ‚Çπ2,300/night"
            }, {
                name: "Golden Tree",
                rating: 4.5,
                location: "Near Bali Nolia Sahi, Puri",
                price: "Starting ‚Çπ1,500/night"
            }]
        };

        // --- Carousel Logic Start ---
        let currentSlide = 0;
        const SLIDE_INTERVAL = 4000; // 4 seconds
        let slideIntervalId;

        function startAutoScroll() {
            // Clear any existing interval before setting a new one
            if (slideIntervalId) clearInterval(slideIntervalId);
            slideIntervalId = setInterval(nextSlide, SLIDE_INTERVAL);
        }

        function stopAutoScroll() {
            if (slideIntervalId) clearInterval(slideIntervalId);
            slideIntervalId = null;
        }

        function nextSlide() {
            currentSlide = (currentSlide + 1) % packageData.carouselImages.length;
            updateCarouselUI();
        }

        // Global function for dot clicks
        window.goToSlide = function(index) {
            stopAutoScroll();
            currentSlide = index;
            updateCarouselUI();
            startAutoScroll();
        }

        // New manual navigation functions for arrows
        window.manualNextSlide = function() {
            stopAutoScroll();
            currentSlide = (currentSlide + 1) % packageData.carouselImages.length;
            updateCarouselUI();
            startAutoScroll();
        }

        window.manualPrevSlide = function() {
            stopAutoScroll();
            // The addition of length handles the wrap-around when currentSlide is 0
            currentSlide = (currentSlide - 1 + packageData.carouselImages.length) % packageData.carouselImages.length;
            updateCarouselUI();
            startAutoScroll();
        }

        function updateCarouselUI() {
            const carouselElement = document.getElementById('image-carousel');
            const dotsContainer = document.getElementById('carousel-dots');
            const photoIndexSpan = document.getElementById('current-photo-index');

            // Calculate and apply offset for sliding effect
            // Corrected: Added 'px' to 0 offset and used template literal correctly
            const offset = -currentSlide * 100;
            carouselElement.style.transform = `translateX(${offset}%)`;

            // Update photo index counter
            if (photoIndexSpan) {
                photoIndexSpan.textContent = currentSlide + 1;
            }

            // Update dots
            // Corrected: Ensured template literal is correctly formatted for the button string
            dotsContainer.innerHTML = packageData.carouselImages.map((_, index) =>
                `<button onclick="goToSlide(${index})" class="w-2.5 h-2.5 rounded-full transition-all duration-300 ${index === currentSlide ? 'bg-white w-5' : 'bg-gray-400 opacity-75'}"></button>`
            ).join('');
        }

        function initCarousel() {
            const carouselElement = document.getElementById('image-carousel');
            // Inject slides HTML
            carouselElement.innerHTML = packageData.carouselImages.map(url => `
                <div class="flex-shrink-0 w-full h-full">
                    <img src="${url}" alt="Puri Scenery" class="w-full h-full object-cover" onerror="this.src='https://placehold.co/600x400/cccccc/ffffff?text=Image+Not+Available'">
                </div>
            `).join('');

            // Initial display update
            updateCarouselUI();

            // Start automatic scroll
            startAutoScroll();

            // Add hover listeners to pause auto-scroll (better UX for manual control)
            const carouselContainer = document.getElementById('carousel-container');
            if (carouselContainer) {
                carouselContainer.addEventListener('mouseenter', stopAutoScroll);
                carouselContainer.addEventListener('mouseleave', startAutoScroll);
            }
        }
        // --- Carousel Logic End ---


        // --- Gemini API Integration Start (Corrected Model Version) ---

        const apiKey = ""; // API key is provided at runtime
        // Corrected: Ensured template literal for API_URL is correct
        const API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-09-2025:generateContent?key=${apiKey}`;

        // Utility function for exponential backoff
        async function fetchWithRetry(url, options, maxRetries = 5) {
            for (let i = 0; i < maxRetries; i++) {
                try {
                    const response = await fetch(url, options);
                    if (response.status === 429 && i < maxRetries - 1) {
                        // Rate limit, wait with exponential backoff
                        const delay = Math.pow(2, i) * 1000 + Math.random() * 1000;
                        await new Promise(resolve => setTimeout(resolve, delay));
                        continue;
                    }
                    if (!response.ok) {
                        // Corrected: Error message formatting
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response;
                } catch (error) {
                    if (i === maxRetries - 1) throw error;
                }
            }
        }

        // Main LLM function to generate a hidden gem suggestion
        async function generateGeminiSuggestion() {
            const outputElement = document.getElementById('gemini-suggestion-output');
            const spinner = document.getElementById('gemini-spinner');
            const button = document.getElementById('gemini-generate-btn');

            // Construct a summary of the current trip details to guide the AI
            const itinerarySummary = packageData.itinerary.map(item => `Day ${item.day}: ${item.title}`).join('; ');

            // *** CORRECTION: Updated prompt to be about Puri/Odisha, not Goa ***
            const userQuery = `You are a creative Odisha travel expert. The user is on a 4-day trip: ${itinerarySummary}. The main focus is Puri, Konark, and Chilika. Suggest ONE unique, non-touristy 'hidden gem' activity, spot, or local food experience in or very near Puri that would fit this itinerary. Keep the suggestion description concise (max 3-4 sentences) and highly appealing.`;

            // UI Feedback: Loading
            button.disabled = true;
            spinner.classList.remove('hidden');
            outputElement.style.display = 'block';
            outputElement.innerHTML = '';
            outputElement.classList.remove('bg-green-50', 'bg-red-50', 'border-red-300', 'border-green-300');
            outputElement.classList.add('border', 'border-gray-200');
            outputElement.textContent = "Thinking of a perfect spot for you...";

            try {
                const payload = {
                    contents: [{
                        parts: [{
                            text: userQuery
                        }]
                    }],
                    systemInstruction: {
                        parts: [{
                            text: "Act as a passionate, local Odia travel advisor."
                        }]
                    },
                    generationConfig: {
                        temperature: 0.8,
                    }
                };

                const response = await fetchWithRetry(API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(payload)
                });

                const result = await response.json();
                const generatedText = result.candidates ? .[0] ? .content ? .parts ? .[0] ? .text;

                if (generatedText) {
                    // Corrected: Ensured HTML string is properly formatted
                    outputElement.innerHTML = `<h3 class="font-bold text-lg text-green-700 mb-2">‚ú® Hidden Gem Suggestion:</h3><p class="text-gray-800">${generatedText}</p>`;
                    outputElement.classList.remove('border-gray-200');
                    outputElement.classList.add('bg-green-50', 'border-green-300');
                } else {
                    outputElement.textContent = "Sorry, I couldn't generate a suggestion right now. Please try again later.";
                    outputElement.classList.remove('border-gray-200');
                    outputElement.classList.add('bg-red-50', 'border-red-300');
                }

            } catch (error) {
                console.error("Error generating suggestion:", error); // Added console log for debugging
                outputElement.textContent = "An error occurred while connecting to the travel AI. Please check your connection or try again.";
                outputElement.classList.remove('border-gray-200');
                outputElement.classList.add('bg-red-50', 'border-red-300');
            } finally {
                spinner.classList.add('hidden');
                button.disabled = false;
            }
        }

        // --- Gemini API Integration End ---


        // Function to switch tabs (existing logic)
        function switchTab(tabId, element) {
            // Remove active class from all tabs and hide all content
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active-tab', 'text-orange-600');
                btn.classList.add('text-gray-500');
            });
            document.querySelectorAll('.tab-content').forEach(content => {
                content.style.display = 'none';
            });

            // Add active class to the clicked tab and show relevant content
            element.classList.add('active-tab', 'text-orange-600');
            element.classList.remove('text-gray-500');
            document.getElementById(tabId).style.display = 'block';
        }

        // Initialize the app on load
        window.onload = () => {
            // Set initial package data from the corrected object
            document.getElementById('package-title').textContent = packageData.title;
            // *** CORRECTION ***
            // Added dynamic population for the destination
            document.getElementById('package-destination').textContent = `Destination: ${packageData.destination}`;
            document.getElementById('package-duration').textContent = packageData.duration;
            document.getElementById('package-from').textContent = packageData.fromCity;
            document.getElementById('package-price-main').textContent = packageData.price;
            document.getElementById('package-price-cta').textContent = packageData.price;

            // Set sidebar data (was missing in original code)
            document.getElementById('package-duration-sidebar').textContent = packageData.duration;
            document.getElementById('package-from-sidebar').textContent = packageData.fromCity;

            // Render Itinerary 
            const itineraryHtml = packageData.itinerary.map(item => `
                <div class="relative pl-8 pb-8">
                    <!-- Corrected: Timeline line was missing bottom padding, making last item look cut off -->
                    <div class="absolute w-0.5 bg-indigo-200 h-full left-1 top-0"></div>
                    <div class="absolute w-4 h-4 rounded-full bg-orange-500 left-0 top-1 ring-4 ring-white shadow"></div>
                    <div class="flex items-start">
                        <div class="flex-shrink-0 font-bold text-sm text-gray-600 pr-4">Day ${item.day}</div>
                        <div>
                            <h3 class="font-bold text-lg text-gray-800 mb-1">${item.title}</h3>
                            <p class="text-gray-600 text-sm">${item.details}</p>
                        </div>
                    </div>
                </div>
            `).join('');
            // Add a small spacer at the end of the itinerary list for better scrolling
            document.getElementById('itinerary-content').innerHTML = itineraryHtml + '<div class="h-4"></div>';


            // Render Inclusions
            const inclusionsHtml = packageData.inclusions.map(item => `
                <li class="flex items-start mb-4 p-3 bg-white rounded-lg shadow-sm border border-gray-100">
                    <span class="text-xl mr-3 flex-shrink-0">${item.icon}</span>
                    <p class="text-gray-700">${item.text}</p>
                </li>
            `).join('');
            document.getElementById('inclusions-content-list').innerHTML = inclusionsHtml;

            // Render Hotels
            const hotelsHtml = packageData.hotels.map(item => `
                <div class="bg-white p-5 rounded-xl shadow-lg mb-4 flex flex-col md:flex-row items-start border border-blue-100">
                    <div class="flex-grow">
                        <h4 class="text-xl font-bold text-gray-800">${item.name}</h4>
                        <div class="flex items-center text-sm text-yellow-500 my-1">
                            ${'‚≠ê'.repeat(Math.floor(item.rating))}
                            <!-- Corrected: Added logic for half star or empty star if needed, though not strictly required -->
                            <span class="ml-2 text-gray-500">(${item.rating} Stars)</span>
                        </div>
                        <p class="text-gray-600 text-sm mb-3">üìç ${item.location}</p>
                        <p class="text-indigo-600 font-semibold text-base">${item.price}</p>
                    </div>
                    <button class="mt-3 md:mt-0 md:ml-6 bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg transition duration-300 transform hover:scale-105 shadow-md">
                        View Details
                    </button>
                </div>
            `).join('');
            document.getElementById('hotels-content').innerHTML = hotelsHtml;


            // Activate the first tab (Overview)
            document.getElementById('tab-overview').click();

            // Initialize new features
            initCarousel();
        };
    </script>

    <!-- Header / Navigation Bar -->
    <header class="bg-white shadow-md sticky top-0 z-40">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3 flex justify-between items-center">
            <div class="flex items-center">
                <span class="text-2xl font-extrabold text-blue-600">WonderlightAdventure</span>
                <span class="text-sm font-light text-orange-500 ml-1">Our Package</span>
            </div>
            <!-- Removed empty div that was here -->
        </div>
    </header>

    <!-- Main Content Area -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="flex flex-col lg:flex-row gap-8">
            <!-- Left Column: Package Details and Tabs (70%) -->
            <div class="lg:w-7/12 xl:w-8/12">
                <!-- Breadcrumbs -->
                <div class="text-sm text-gray-500 mb-4">
                    <!-- Corrected: Links should be relative or absolute, added # for placeholder -->
                    <a href="home.html" class="hover:text-blue-600">Home</a> / <a href="odishabooknow.html" class="hover:text-blue-600">Our Packages</a> / Puri
                </div>

                <!-- Package Header -->
                <div class="bg-white p-6 md:p-8 rounded-xl shadow-lg border-t-4 border-blue-500 mb-6">
                    <h1 id="package-title" class="text-3xl md:text-4xl font-extrabold text-gray-900 mb-2"></h1>
                    <!-- *** CORRECTION ***
                    Changed the static "Destination: Puri" to an empty <p> tag with an ID
                    so it can be populated by the corrected packageData object.
                    -->
                    <p id="package-destination" class="text-xl font-medium text-blue-600 mb-4"></p>

                    <!-- Key Info Pills -->
                    <div class="flex flex-wrap gap-3 mb-6 items-center">
                        <span class="bg-indigo-100 text-indigo-700 text-sm font-semibold px-4 py-1.5 rounded-full shadow-sm">
                            <!-- Removed <i> tags, as FontAwesome is not imported. Using emoji or text is safer. -->
                            üìÖ <span id="package-duration"></span>
                        </span>
                        <span class="bg-green-100 text-green-700 text-sm font-semibold px-4 py-1.5 rounded-full shadow-sm">
                            üìç <span id="package-from"></span>
                        </span>
                    </div>

                    <!-- Image Carousel -->
                    <div id="carousel-container" class="relative h-64 md:h-80 lg:h-96 bg-gray-200 rounded-lg overflow-hidden shadow-inner group">
                        <!-- Slides Container -->
                        <div id="image-carousel" class="flex w-full h-full transition-transform duration-500 ease-in-out">
                            <!-- Slides will be injected by JavaScript -->
                        </div>

                        <!-- Previous Button -->
                        <button onclick="manualPrevSlide()" class="absolute left-2 top-1/2 -translate-y-1/2 p-2 bg-black/30 hover:bg-black/50 text-white rounded-full transition-opacity opacity-0 group-hover:opacity-100 z-10 hidden sm:block">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path></svg>
                        </button>

                        <!-- Next Button -->
                        <button onclick="manualNextSlide()" class="absolute right-2 top-1/2 -translate-y-1/2 p-2 bg-black/30 hover:bg-black/50 text-white rounded-full transition-opacity opacity-0 group-hover:opacity-100 z-10 hidden sm:block">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>
                        </button>

                        <!-- Dots Navigation -->
                        <div id="carousel-dots" class="absolute bottom-4 left-0 right-0 flex justify-center space-x-2 z-10">
                            <!-- Dots will be injected by JavaScript -->
                        </div>
                        <span class="absolute bottom-4 right-4 text-xs font-semibold text-white/90 bg-black/30 px-2 py-1 rounded-full z-10">
                            Photo <span id="current-photo-index">1</span> of 6
                        </span>
                    </div>
                </div>

                <!-- Tabs Navigation -->
                <div class="sticky top-[75px] bg-white z-30 shadow-md rounded-xl p-2 mb-6">
                    <nav class="flex space-x-2 md:space-x-8 overflow-x-auto whitespace-nowrap">
                        <!-- Corrected: Added 'tab-button' class to all buttons for consistency -->
                        <button id="tab-overview" onclick="switchTab('content-overview', this)" class="tab-button py-2 px-4 text-gray-500 transition duration-150">Overview</button>
                        <button onclick="switchTab('content-itinerary', this)" class="tab-button py-2 px-4 text-gray-500 transition duration-150">Itinerary</button>
                        <button onclick="switchTab('content-inclusions', this)" class="tab-button py-2 px-4 text-gray-500 transition duration-150">Inclusions</button>
                        <button onclick="switchTab('content-hotels', this)" class="tab-button py-2 px-4 text-gray-500 transition duration-150">Hotels</button>
                        <button onclick="switchTab('content-terms', this)" class="tab-button py-2 px-4 text-gray-500 transition duration-150">Booking Policy</button>
                    </nav>
                </div>

                <!-- Tab Content Containers -->
                <div class="space-y-6">
                    <!-- 1. Overview Tab -->
                    <div id="content-overview" class="tab-content bg-white p-6 rounded-xl shadow-lg">
                        <h2 class="text-2xl font-bold text-gray-800 mb-4 border-b pb-2">Package Overview</h2>
                        <p class="text-gray-700 mb-4">
                            Dive into the spiritual heart and sun-kissed shores of Odisha with this captivating all-inclusive package. Perfect for couples, friends, or families seeking a seamless blend of cultural depth, religious sanctity, and a relaxing beach holiday. From the
                            majestic Jagannath Temple to the architectural marvel of Konark and the tranquil beauty of Chilika Lake, this 4-Day escape covers the essential highlights of this vibrant coastal region.
                        </p>
                        <h3 class="text-xl font-semibold text-gray-800 mt-6 mb-3">Key Highlights</h3>
                        <ul class="list-disc list-inside text-gray-700 ml-4 space-y-2">
                            <li>Spiritual Awakening: Seek blessings at the world-famous Shree Jagannath Temple, one of the Char Dham pilgrimage sites, and witness its unique rituals and architectural grandeur.</li>
                            <li>Golden Beach Bliss: Relax and rejuvenate on the pristine Golden Beach (Puri Beach), an internationally certified Blue Flag beach known for its clean sands and beautiful sunrises. Enjoy a refreshing dip or a leisurely evening
                                stroll.
                            </li>
                            <li>Architectural Wonder: Journey to the nearby Konark Sun Temple, a UNESCO World Heritage site and an unparalleled example of Kalinga architecture, often called the Black Pagoda.</li>
                            <li>Nature & Wildlife: Take a memorable day trip to Chilika Lake, Asia's largest brackish water lagoon, where you can enjoy a boat ride, spot migratory birds, and search for the elusive Irrawaddy Dolphins at Satapada.</li>
                            <li>Cultural Immersion: Explore Raghurajpur Artist Village, a heritage crafts village famous for its traditional Pattachitra paintings, Tussar silk paintings, and stone carvings.</li>
                        </ul>
                    </div>

                    <!-- 2. Itinerary Tab -->
                    <div id="content-itinerary" class="tab-content bg-white p-6 rounded-xl shadow-lg">
                        <h2 class="text-2xl font-bold text-gray-800 mb-4 border-b pb-2">Detailed Itinerary</h2>
                        <div id="itinerary-content" class="pr-3">
                            <!-- Content injected by JavaScript -->
                        </div>

                        <!-- AI-Powered Discovery Feature -->
                        <div class="mt-8 pt-6 border-t border-gray-200">
                            <h3 class="text-xl font-bold text-indigo-700 mb-4 flex items-center">
                                <!-- Sparkle Icon SVG (More appropriate) -->
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-2 text-yellow-500" viewBox="0 0 20 20" fill="currentColor">
                                  <path fill-rule="evenodd" d="M10 3a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 3zM13.964 5.332a.75.75 0 01.53 1.299l-1.299 1.299a.75.75 0 01-1.06-1.06l1.299-1.3a.75.75 0 01.53-.239zM16.25 10a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5a.75.75 0 01.75-.75zM13.964 14.668a.75.75 0 011.06-1.06l1.3 1.3a.75.75 0 01-.53 1.299.75.75 0 01-.53-.239l-1.3-1.3zM10 16.25a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5a.75.75 0 01.75-.75zM6.036 14.668l-1.3 1.3a.75.75 0 01-1.06-1.06l1.3-1.3a.75.75 0 111.06 1.06zM3.75 10a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 013.75 10zM6.036 5.332a.75.75 0 011.06 1.06l-1.3 1.3a.75.75 0 01-1.06-1.06l1.3-1.3zM10 6.5A3.5 3.5 0 1010 13a3.5 3.5 0 000-6.5z" clip-rule="evenodd" />
                                </svg> AI-Powered Discovery: Find a Hidden Gem
                            </h3>
                            <p class="text-gray-600 mb-4">Want to experience something truly local? Use our travel AI to get a unique, off-the-beaten-path recommendation for Odisha.</p>

                            <!-- Corrected: Removed stray backtick -->
                            <button id="gemini-generate-btn" onclick="generateGeminiSuggestion()" class="flex items-center justify-center bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 px-6 rounded-xl transition duration-300 shadow-lg transform hover:scale-[1.01] mb-4">
                                <span id="gemini-spinner" class="hidden animate-spin h-5 w-5 mr-3 border-2 border-white border-t-blue-300 rounded-full"></span>
                                <span class="text-lg">‚ú® Get Hidden Gem Suggestion</span>
                            </button>

                            <div id="gemini-suggestion-output" style="display: none;" class="rounded-xl p-4 border transition duration-300 min-h-[50px]">
                                <!-- AI suggestion will appear here -->
                            </div>
                        </div>
                    </div>

                    <!-- 3. Inclusions Tab -->
                    <div id="content-inclusions" class="tab-content bg-white p-6 rounded-xl shadow-lg">
                        <h2 class="text-2xl font-bold text-gray-800 mb-4 border-b pb-2">What's Included</h2>
                        <ul id="inclusions-content-list" class="space-y-3">
                            <!-- Content injected by JavaScript -->
                        </ul>
                        <div class="mt-6 p-4 bg-orange-50 border-l-4 border-orange-500 rounded-lg">
                            <p class="font-semibold text-orange-800">Note on Exclusions:</p>
                            <!-- Corrected: Updated exclusion note to be more general -->
                            <p class="text-sm text-orange-700">Lunches, dinners, optional water sports, personal expenses, and anything not specifically mentioned in the 'Inclusions' section are excluded.</p>
                        </div>
                    </div>

                    <!-- 4. Hotels Tab -->
                    <div id="content-hotels" class="tab-content bg-white p-6 rounded-xl shadow-lg">
                        <h2 class="text-2xl font-bold text-gray-800 mb-4 border-b pb-2">Accommodation Options</h2>
                        <p class="text-gray-600 mb-4">Accommodation is provided in 3-star standard rooms. You can choose to upgrade your hotel during customization.</p>
                        <div id="hotels-content">
                            <!-- Content injected by JavaScript -->
                        </div>
                    </div>

                    <!-- 5. Terms Tab -->
                    <div id="content-terms" class="tab-content bg-white p-6 rounded-xl shadow-lg">
                        <h2 class="text-2xl font-bold text-gray-800 mb-4 border-b pb-2">Booking & Cancellation Policy</h2>
                        <div class="space-y-4 text-gray-700">
                            <div>
                                <h3 class="font-semibold text-lg text-gray-800">Booking Confirmation</h3>
                                <p class="text-sm">A 25% non-refundable deposit is required at the time of booking. The remaining balance must be paid 30 days before the departure date.</p>
                            </div>
                            <div>
                                <h3 class="font-semibold text-lg text-gray-800">Cancellation Policy</h3>
                                <ul class="list-disc list-inside text-sm ml-4 space-y-1">
                                    <li>30 days or more prior to departure: Deposit amount will be forfeited.</li>
                                    <li>15-29 days prior to departure: 50% of the total package cost will be forfeited.</li>
                                    <li>Less than 15 days prior to departure: 90% of the total package cost will be forfeited.</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column: Price and CTA (30%) - Fixed for desktop -->
            <div class="lg:w-5/12 xl:w-4/12 hidden lg:block sticky top-[75px] self-start">
                <div class="bg-white p-6 rounded-xl shadow-2xl border-t-8 border-orange-500">
                    <h2 class="text-2xl font-bold text-gray-900 mb-2">Package Price</h2>
                    <p class="text-sm text-gray-500 mb-4">Starting From (Stay Included)</p>

                    <div class="flex items-end justify-between mb-6">
                        <div class="flex flex-col">
                            <span class="text-4xl font-extrabold text-blue-600 leading-none" id="package-price-main"></span>
                            <span class="text-sm font-medium text-gray-500 mt-1">per person (Twin Sharing)</span>
                        </div>
                        <span class="text-xs text-green-600 bg-green-100 px-2 py-1 rounded-full font-bold">
                            25% OFF
                        </span>
                    </div>

                    <div class="space-y-3">
                        <div class="flex justify-between text-sm text-gray-700">
                            <span>Duration:</span>
                            <span class="font-semibold text-gray-900" id="package-duration-sidebar"></span>
                        </div>
                        <div class="flex justify-between text-sm text-gray-700">
                            <span>Departure City:</span>
                            <span class="font-semibold text-gray-900" id="package-from-sidebar"></span>
                        </div>
                    </div>

                    <!-- Updated BOOK NOW button for Desktop -->
                    <a href="odishastandard.html" target="_blank" class="block text-center w-full mt-6 bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 rounded-xl text-lg transition duration-300 transform hover:scale-[1.01] shadow-xl">
                        BOOK NOW
                    </a>

                    <div class="mt-6 text-center text-sm text-gray-500">
                        Need assistance? <a href="tel:+918117026570" class="text-blue-600 hover:underline font-semibold">Call 8117026570</a>
                    </div>
                </div>
            </div>

        </div>
    </main>

    <!-- Floating CTA Bar (Mobile Only) -->
    <div id="floating-cta" class="lg:hidden bg-white p-4 border-t border-gray-200 flex justify-between items-center">
        <div class="flex flex-col">
            <span class="text-xs font-medium text-gray-500">Starting From</span>
            <span class="text-2xl font-extrabold text-blue-600" id="package-price-cta"></span>
        </div>
        <!-- *** CORRECTION: Updated BOOK NOW button link for Mobile to match desktop *** -->
        <a href="odishastandard.html" target="_blank" class="flex-shrink-0 bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-6 rounded-lg text-base transition duration-300 shadow-lg">
            Book Now
        </a>
    </div>

</body>

</html>
